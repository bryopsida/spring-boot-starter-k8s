plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.2'
	id 'org.eclipse.jkube.kubernetes' version '1.13.1'
	id 'com.palantir.git-version' version '3.0.0'
}

group = 'rocks.curium'
version = gitVersion().replace(".dirty", "-dirty")

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

kubernetes {
	offline = false
	images {
        image {
            name = 'ghcr.io/bryopsida/spring-boot-k8s-starter'
            build {
				assembly {
                    name = 'target'
                }
            }
        }
    }
    access {
        namespace = 'default'
    }
    enricher {
        excludes = ['jkube-expose']
    }
    generator {
        includes = ['spring-boot']
        config {
            'spring-boot' {
                color = 'always'
            }
        }
    }
    resources {
        labels {
            all {
                testProject = 'spring-boot-starter'
            }
        }
    }
    helm {
    }
}
